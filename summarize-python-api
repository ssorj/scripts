#!/usr/bin/env python3
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import print_function

import importlib
import inspect
import os
import sys

module_names = sys.argv[1:3]

for name in module_names:
     module = importlib.import_module(name)
     visited = set()

     print("module {}".format(module.__name__))

     members = inspect.getmembers(module)
     classes = [x for x in members if inspect.isclass(x[1])]
     routines = [x for x in members if inspect.isroutine(x[1])]
     generators = [x for x in members if inspect.isgenerator(x[1])]

     def printer(collection, name):
          for member in sorted(collection):
               member_name = member[0]

               visited.add(member_name)

               if member_name.startswith("_"):
                    continue

               print("  {} {}".format(name, member_name))

     printer(classes, "class")
     printer(routines, "routine")
     printer(generators, "generator")

     for member in sorted(inspect.getmembers(module)):
          member_name = member[0]

          if member_name in visited:
               continue
               
          if member_name.startswith("_"):
               continue

          print("  attribute {}".format(member[0]))
